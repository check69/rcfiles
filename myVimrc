set nocompatible              " required
filetype off                  " required

:let mapleader = "_"
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Bundle 'OmniCppComplete'
Bundle 'Valloric/YoucompleteMe'
Bundle 'SirVer/ultisnips'
Bundle 'honza/vim-snippets'
Bundle 'majutsushi/tagbar'

map <F4> :TagbarToggle<CR>
Bundle 'Gundo'

map <Leader>b :CtrlPBuffer<CR>
map <Leader>w :CtrlPBuffer<CR>

Plugin 'scrooloose/syntastic'
Plugin 'nvie/vim-flake8'
Plugin 'scrooloose/nerdtree'
map <F6> :NERDTreeFind<CR>
Plugin 'jistr/vim-nerdtree-tabs'

Plugin 'kien/ctrlp.vim'
Plugin 'tpope/vim-fugitive'

Plugin 'jnurmine/Zenburn'
Plugin 'altercation/vim-colors-solarized'
Bundle 'flazz/vim-colorschemes'
Bundle 'davidhalter/jedi-vim'
Bundle 'Conque-GDB'
Bundle 'DirDiff.vim'
Plugin 'gmarik/Vundle.vim'
Plugin 'tmhedberg/SimpylFold'
Plugin 'vim-scripts/indentpython.vim'
Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
" Add all your plugins here (note older versions of Vundle used Bundle instead of Plugin)

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

set splitbelow
set splitright

"split navigations
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Enable folding
set foldmethod=indent
set foldlevel=99

" Enable folding with the spacebar
nnoremap <space> za

let g:SimpylFold_docstring_preview=1

au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix

au BufNewFile,BufRead *.js, *.html, *.css
    \ set tabstop=2 |
    \ set softtabstop=2 |
    \ set shiftwidth=2

"au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/
set backspace=indent,eol,start
set lcs=trail:·,tab:>>,nbsp:·
set softtabstop=2
set tabstop=8
set autoindent
set shiftwidth=2
set smarttab
set smartindent
set expandtab
set list
set number
set notextmode
set hlsearch
set mouse=a
set ignorecase
set smartcase

" Persistent undo
try
    set undodir=$HOME/.vim/.undodir
    set undofile
    set undolevels=500
catch
endtry

set encoding=utf-8

"python with virtualenv support

let python_highlight_all=1
syntax on

if has('gui_running')
  set background=dark
  colorscheme solarized
else
  colorscheme zenburn
endif

call togglebg#map("<F5>")

let NERDTreeIgnore=['\.pyc$', '\~$'] "ignore files in NERDTree

set nu

set clipboard=unnamed

"set editing-mode vi

" Remove trailing spaces on save file
autocmd FileType * autocmd BufWritePre <buffer> :%s/\s\+$//e

" colors
if match($TERMCAP, 'Co#256:') == 0 || match($TERMCAP, ':Co#256:') > 0
    set t_Co=256
endif

let simplecolor=$AM_VIM_SIMPLECOLOR
if simplecolor == '1'
    colorscheme desert
else
    colorscheme jelleybeans
endif

if &diff
    colorscheme jellybeans
endif

let &path.="~/projects/tecos,/usr/include,/usr/include/AL"
let g:ycm_global_ycm_extra_conf = '~/.vim/.ycm_extra_conf.py'

let g:UltiSnipsExpandTrigger="<Leader>s"
let g:UltiSnipsJumpForwardTrigger="<Leader>d"
let g:UltiSnipsJumpBackwardTrigger="<Leader>a"
let g:UltiSnipsEditSplit="vertical"

let g:SimplyFold_docstring_preview=1

let g:ycm_server_keep_logfiles = 1
let g:ycm_server_log_level = 'debug'

let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>

let python_highlight_all=1

set grepprg=grep\ -nH\ $*
let g:tex_flavor='latex'

set cino=N-s
